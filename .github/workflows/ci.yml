name: CI
on: [push, pull_request]
jobs:
  test:
    name: Test
    strategy:
      matrix:
        python-version: ['3.9.x', '3.10.x', '3.11.x']
        django-version: ['4.0.10', '4.1.9', '4.2.1']
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Initialize environment
      run: |
        python -m pip install -U pip poetry
        poetry install
        poetry run pip install -q django==${{ matrix.django-version }}

    - name: Run pre-test checks
      run: |
        poetry run black --check hamlpy
        poetry run ruff hamlpy
        poetry run isort hamlpy

    - name: Run tests
      run: poetry run py.test --cov-report=xml --cov=hamlpy hamlpy

    - name: Upload coverage
      if: success()
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

  release:
    name: Release
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9.x'

    - name: Publish release
      run: |
        python -m pip install -U pip poetry
        poetry build
        poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
        poetry publish
